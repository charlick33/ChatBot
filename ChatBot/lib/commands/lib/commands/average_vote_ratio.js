// Generated by CoffeeScript 1.6.2
var avgVoteRatioCommand, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

avgVoteRatioCommand = (function(_super) {
  __extends(avgVoteRatioCommand, _super);

  function avgVoteRatioCommand() {
    _ref = avgVoteRatioCommand.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  avgVoteRatioCommand.prototype.init = function() {
    this.command = '/avgvoteratio';
    this.parseType = 'exact';
    return this.rankPrivelege = 'mod';
  };

  avgVoteRatioCommand.prototype.functionality = function() {
    var averageRatio, msg, r, ratio, roomRatios, uid, user, userRatio, votes, _i, _len, _ref1;

    roomRatios = [];
    r = new RoomHelper();
    _ref1 = data.voteLog;
    for (uid in _ref1) {
      votes = _ref1[uid];
      user = data.users[uid].getUser();
      userRatio = r.userVoteRatio(user);
      roomRatios.push(userRatio['positiveRatio']);
    }
    averageRatio = 0.0;
    for (_i = 0, _len = roomRatios.length; _i < _len; _i++) {
      ratio = roomRatios[_i];
      averageRatio += ratio;
    }
    averageRatio = averageRatio / roomRatios.length;
    msg = "Accounting for " + roomRatios.length.toString() + " user ratios, the average room ratio is " + averageRatio.toFixed(2).toString() + ".";
    return API.sendChat(msg);
  };

  return avgVoteRatioCommand;

})(Command);
